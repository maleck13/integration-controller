// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package fuse

import (
	"github.com/operator-framework/operator-sdk/pkg/sdk"
	"sync"
)

var (
	lockFuseCrudlerMockList sync.RWMutex
)

// FuseCrudlerMock is a mock implementation of FuseCrudler.
//
//     func TestSomethingThatUsesFuseCrudler(t *testing.T) {
//
//         // make and configure a mocked FuseCrudler
//         mockedFuseCrudler := &FuseCrudlerMock{
//             ListFunc: func(namespace string, o sdk.Object, option ...sdk.ListOption) error {
// 	               panic("TODO: mock out the List method")
//             },
//         }
//
//         // TODO: use mockedFuseCrudler in code that requires FuseCrudler
//         //       and then make assertions.
//
//     }
type FuseCrudlerMock struct {
	// ListFunc mocks the List method.
	ListFunc func(namespace string, o sdk.Object, option ...sdk.ListOption) error

	// calls tracks calls to the methods.
	calls struct {
		// List holds details about calls to the List method.
		List []struct {
			// Namespace is the namespace argument value.
			Namespace string
			// O is the o argument value.
			O sdk.Object
			// Option is the option argument value.
			Option []sdk.ListOption
		}
	}
}

// List calls ListFunc.
func (mock *FuseCrudlerMock) List(namespace string, o sdk.Object, option ...sdk.ListOption) error {
	if mock.ListFunc == nil {
		panic("FuseCrudlerMock.ListFunc: method is nil but FuseCrudler.List was just called")
	}
	callInfo := struct {
		Namespace string
		O         sdk.Object
		Option    []sdk.ListOption
	}{
		Namespace: namespace,
		O:         o,
		Option:    option,
	}
	lockFuseCrudlerMockList.Lock()
	mock.calls.List = append(mock.calls.List, callInfo)
	lockFuseCrudlerMockList.Unlock()
	return mock.ListFunc(namespace, o, option...)
}

// ListCalls gets all the calls that were made to List.
// Check the length with:
//     len(mockedFuseCrudler.ListCalls())
func (mock *FuseCrudlerMock) ListCalls() []struct {
	Namespace string
	O         sdk.Object
	Option    []sdk.ListOption
} {
	var calls []struct {
		Namespace string
		O         sdk.Object
		Option    []sdk.ListOption
	}
	lockFuseCrudlerMockList.RLock()
	calls = mock.calls.List
	lockFuseCrudlerMockList.RUnlock()
	return calls
}
